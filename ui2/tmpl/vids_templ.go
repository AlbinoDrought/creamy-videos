// Code generated by templ@v0.2.304 DO NOT EDIT.

package tmpl

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

// GoExpression
import (
	"fmt"
	"github.com/AlbinoDrought/creamy-videos/videostore"
	"net/url"
	"strings"
)

// formatters:

func classes(c ...string) string {
	return strings.Join(c, " ")
}

func classIf(name string, condition bool) string {
	if condition {
		return name
	}
	return ""
}

func videoURL(video videostore.Video) templ.SafeURL {
	return templ.SafeURL(fmt.Sprintf("/watch/%v", video.ID))
}

func videoEditURL(video videostore.Video) templ.SafeURL {
	return templ.SafeURL(fmt.Sprintf("/edit/%v", video.ID))
}

func videoDeleteURL(video videostore.Video) templ.SafeURL {
	return templ.SafeURL(fmt.Sprintf("/delete/%v", video.ID))
}

func tagSearchURL(tag string) templ.SafeURL {
	return templ.SafeURL("/search?tags=" + url.QueryEscape(tag))
}

// components:

func sortDropdown(direction string, fluid bool) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// Element (standard)
		// Element CSS
		var var_2 = []any{classes("sort-dropdown", classIf("fluid", fluid))}
		err = templ.RenderCSSItems(ctx, templBuffer, var_2...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<select")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" name=\"sort\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" class=")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_2).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" onchange=\"window.cvSubmitNearestForm(this)\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<option")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" value=\"newest\"")
		if err != nil {
			return err
		}
		if direction == "newest" {
			_, err = templBuffer.WriteString(" selected")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Text
		var_3 := `Sort: Newest`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</option>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<option")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" value=\"oldest\"")
		if err != nil {
			return err
		}
		if direction == "oldest" {
			_, err = templBuffer.WriteString(" selected")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Text
		var_4 := `Sort: Oldest`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</option>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<option")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" value=\"az\"")
		if err != nil {
			return err
		}
		if direction == "az" {
			_, err = templBuffer.WriteString(" selected")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Text
		var_5 := `Sort: A-Z`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</option>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<option")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" value=\"za\"")
		if err != nil {
			return err
		}
		if direction == "za" {
			_, err = templBuffer.WriteString(" selected")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Text
		var_6 := `Sort: Z-A`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</option>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</select>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func videoThumbnail(pug PublicURLGenerator, video videostore.Video) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_7 := templ.GetChildren(ctx)
		if var_7 == nil {
			var_7 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// Element (standard)
		_, err = templBuffer.WriteString("<a")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" cv-boost=\"true\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" href=")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		var var_8 templ.SafeURL = videoURL(video)
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_8)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" class=\"ui fluid video card\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" aria-label=\"Video Thumbnail\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui image\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<img")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" src=")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(pug(video.Thumbnail)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"content\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<span")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"header\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// StringExpression
		var var_9 string = video.Title
		_, err = templBuffer.WriteString(templ.EscapeString(var_9))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func videoGrid(pug PublicURLGenerator, videos []videostore.Video) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_10 := templ.GetChildren(ctx)
		if var_10 == nil {
			var_10 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui stackable grid\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// For
		for _, video := range videos {
			// Element (standard)
			_, err = templBuffer.WriteString("<div")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = templBuffer.WriteString(" class=\"four wide column\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(">")
			if err != nil {
				return err
			}
			// TemplElement
			err = videoThumbnail(pug, video).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func pagingLinks(p Paging) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_11 := templ.GetChildren(ctx)
		if var_11 == nil {
			var_11 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui pagination menu\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// For
		for _, page := range genPages(p) {
			// If
			if page.Disabled {
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"disabled item\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// StringExpression
				var var_12 string = page.Page
				_, err = templBuffer.WriteString(templ.EscapeString(var_12))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
			} else {
				// Element (standard)
				// Element CSS
				var var_13 = []any{classes("item", classIf("active", page.Active))}
				err = templ.RenderCSSItems(ctx, templBuffer, var_13...)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<a")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_13).String()))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" href=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				var var_14 templ.SafeURL = templ.SafeURL(page.URL)
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_14)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// StringExpression
				var var_15 string = page.Page
				_, err = templBuffer.WriteString(templ.EscapeString(var_15))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a>")
				if err != nil {
					return err
				}
			}
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

// GoExpression
// wrappers:

func page(title string, description string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_16 := templ.GetChildren(ctx)
		if var_16 == nil {
			var_16 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// DocType
		_, err = templBuffer.WriteString(`<!doctype html>`)
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<html")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" lang=\"en\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<head>")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<meta")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" charset=\"utf-8\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<meta")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" http-equiv=\"X-UA-Compatible\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" content=\"IE=edge\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<meta")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" name=\"viewport\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" content=\"width=device-width,initial-scale=1.0\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<meta")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" name=\"description\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" content=")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(description))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<meta")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" name=\"theme-color\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" content=\"#1b1b1b\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" rel=\"icon\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" href=\"/favicon.ico\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<title>")
		if err != nil {
			return err
		}
		// StringExpression
		var var_17 string = title
		_, err = templBuffer.WriteString(templ.EscapeString(var_17))
		if err != nil {
			return err
		}
		// Whitespace (normalised)
		_, err = templBuffer.WriteString(` `)
		if err != nil {
			return err
		}
		// Text
		var_18 := `| creamy-videos`
		_, err = templBuffer.WriteString(var_18)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title>")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" href=\"/css/semantic.min.0.css\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" rel=\"stylesheet\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" href=\"/css/main.0.css\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" rel=\"stylesheet\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<script")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" defer")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" src=\"/js/main.0.js\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" type=\"text/javascript\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</head>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<body>")
		if err != nil {
			return err
		}
		// Children
		err = var_16.Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</body>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func app(state AppState) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_19 := templ.GetChildren(ctx)
		if var_19 == nil {
			var_19 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" id=\"app\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui fixed inverted main menu\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui container\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<a")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" href=\"/\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" class=\"header item\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<img")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"logo\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" src=\"/img/icon.png\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Whitespace (normalised)
		_, err = templBuffer.WriteString(` `)
		if err != nil {
			return err
		}
		// Text
		var_20 := `Creamy Videos`
		_, err = templBuffer.WriteString(var_20)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<a")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" href=\"/\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" class=\"item\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Text
		var_21 := `Home`
		_, err = templBuffer.WriteString(var_21)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a>")
		if err != nil {
			return err
		}
		// If
		if !state.ReadOnly {
			// Element (standard)
			_, err = templBuffer.WriteString("<a")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = templBuffer.WriteString(" href=\"/upload\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" class=\"item\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(">")
			if err != nil {
				return err
			}
			// Text
			var_22 := `Upload`
			_, err = templBuffer.WriteString(var_22)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a>")
			if err != nil {
				return err
			}
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<form")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" method=\"GET\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" action=\"/search\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" class=\"not-small right menu\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// If
		if state.Sortable {
			// Element (standard)
			_, err = templBuffer.WriteString("<div")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = templBuffer.WriteString(" class=\"borderless item\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(">")
			if err != nil {
				return err
			}
			// TemplElement
			err = sortDropdown(state.SortDirection, false).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</div>")
			if err != nil {
				return err
			}
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"borderless item\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"search-input ui inverted transparent icon input\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<input")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" aria-label=\"Search\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" type=\"text\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" placeholder=\"Search...\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" name=\"text\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" value=")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(state.SearchText))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<button")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" type=\"submit\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<i")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"search link icon\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</i>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</form>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<form")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" method=\"GET\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" action=\"/search\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui only-small fluid fixed inverted menu search\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"borderless item\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"search-input ui inverted transparent icon input\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<input")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" type=\"text\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" placeholder=\"Search...\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" name=\"text\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" value=")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(state.SearchText))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<button")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" type=\"submit\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<i")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"search link icon\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</i>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui main container only-small\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// If
		if state.Sortable {
			// Element (standard)
			_, err = templBuffer.WriteString("<div")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = templBuffer.WriteString(" class=\"only-small mobile-sort-controls\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(">")
			if err != nil {
				return err
			}
			// TemplElement
			err = sortDropdown(state.SortDirection, true).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</form>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" class=\"ui main container\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Children
		err = var_19.Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

// GoExpression
// pages:

func Home(state AppState, paging Paging, videos []videostore.Video) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_23 := templ.GetChildren(ctx)
		if var_23 == nil {
			var_23 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// TemplElement
		var_24 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			// TemplElement
			var_25 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				// TemplElement
				err = videoGrid(state.PUG, videos).Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				// Whitespace (normalised)
				_, err = templBuffer.WriteString(` `)
				if err != nil {
					return err
				}
				// TemplElement
				err = pagingLinks(paging).Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = app(state).Render(templ.WithChildren(ctx, var_25), templBuffer)
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = page("Home", "The creamiest selfhosted tubesite").Render(templ.WithChildren(ctx, var_24), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func Search(state AppState, paging Paging, videos []videostore.Video) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_26 := templ.GetChildren(ctx)
		if var_26 == nil {
			var_26 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// TemplElement
		var_27 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			// TemplElement
			var_28 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				// TemplElement
				err = videoGrid(state.PUG, videos).Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				// Whitespace (normalised)
				_, err = templBuffer.WriteString(` `)
				if err != nil {
					return err
				}
				// TemplElement
				err = pagingLinks(paging).Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = app(state).Render(templ.WithChildren(ctx, var_28), templBuffer)
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = page("Search: "+state.SearchText, "The creamiest selfhosted tubesite").Render(templ.WithChildren(ctx, var_27), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func UploadForm(state AppState, videoFormState VideoFormState) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_29 := templ.GetChildren(ctx)
		if var_29 == nil {
			var_29 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// TemplElement
		var_30 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			// TemplElement
			var_31 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"upload ui text container\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<form")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" method=\"POST\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"ui form\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" enctype=\"multipart/form-data\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui field\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<label>")
				if err != nil {
					return err
				}
				// Text
				var_32 := `Title`
				_, err = templBuffer.WriteString(var_32)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label>")
				if err != nil {
					return err
				}
				// Element (void)
				_, err = templBuffer.WriteString("<input")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" id=\"txtTitle\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" type=\"text\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" name=\"title\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" placeholder=\"Title\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" value=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(videoFormState.Title))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui field\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<label>")
				if err != nil {
					return err
				}
				// Text
				var_33 := `Tags (separated by comma)`
				_, err = templBuffer.WriteString(var_33)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label>")
				if err != nil {
					return err
				}
				// Element (void)
				_, err = templBuffer.WriteString("<input")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" type=\"text\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" name=\"tags\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" placeholder=\"educational, computer science, wizardry\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" value=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(videoFormState.Tags))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"field\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<label>")
				if err != nil {
					return err
				}
				// Text
				var_34 := `Description`
				_, err = templBuffer.WriteString(var_34)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<textarea")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" name=\"description\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" placeholder=\"Description\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// StringExpression
				var var_35 string = videoFormState.Description
				_, err = templBuffer.WriteString(templ.EscapeString(var_35))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</textarea>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"field\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<label>")
				if err != nil {
					return err
				}
				// Text
				var_36 := `File`
				_, err = templBuffer.WriteString(var_36)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label>")
				if err != nil {
					return err
				}
				// Element (void)
				_, err = templBuffer.WriteString("<input")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" type=\"file\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" name=\"file\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" required")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" cv-filename-default-to=\"#txtTitle\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// If
				if videoFormState.Error != "" {
					// Element (standard)
					_, err = templBuffer.WriteString("<div")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"ui visible negative message\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<div")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"header\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Text
					var_37 := `Video upload failed`
					_, err = templBuffer.WriteString(var_37)
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</div>")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<p>")
					if err != nil {
						return err
					}
					// StringExpression
					var var_38 string = videoFormState.Error
					_, err = templBuffer.WriteString(templ.EscapeString(var_38))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</p>")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</div>")
					if err != nil {
						return err
					}
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<button")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" type=\"submit\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"ui submit button\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Text
				var_39 := `Upload`
				_, err = templBuffer.WriteString(var_39)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</button>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</form>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = app(state).Render(templ.WithChildren(ctx, var_31), templBuffer)
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = page("Upload", "The creamiest selfhosted tubesite").Render(templ.WithChildren(ctx, var_30), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func EditForm(state AppState, videoFormState VideoFormState, video videostore.Video) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_40 := templ.GetChildren(ctx)
		if var_40 == nil {
			var_40 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// TemplElement
		var_41 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			// TemplElement
			var_42 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"upload ui text container\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<form")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" method=\"POST\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"ui form\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" enctype=\"multipart/form-data\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui field\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<label>")
				if err != nil {
					return err
				}
				// Text
				var_43 := `Title`
				_, err = templBuffer.WriteString(var_43)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label>")
				if err != nil {
					return err
				}
				// Element (void)
				_, err = templBuffer.WriteString("<input")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" type=\"text\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" name=\"title\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" placeholder=\"Title\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" value=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(videoFormState.Title))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui field\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<label>")
				if err != nil {
					return err
				}
				// Text
				var_44 := `Tags (separated by comma)`
				_, err = templBuffer.WriteString(var_44)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label>")
				if err != nil {
					return err
				}
				// Element (void)
				_, err = templBuffer.WriteString("<input")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" type=\"text\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" name=\"tags\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" placeholder=\"educational, computer science, wizardry\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" value=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(videoFormState.Tags))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"field\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<label>")
				if err != nil {
					return err
				}
				// Text
				var_45 := `Description`
				_, err = templBuffer.WriteString(var_45)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</label>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<textarea")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" name=\"description\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" placeholder=\"Description\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// StringExpression
				var var_46 string = videoFormState.Description
				_, err = templBuffer.WriteString(templ.EscapeString(var_46))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</textarea>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// If
				if videoFormState.Error != "" {
					// Element (standard)
					_, err = templBuffer.WriteString("<div")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"ui visible negative message\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<div")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"header\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Text
					var_47 := `Video edit failed`
					_, err = templBuffer.WriteString(var_47)
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</div>")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<p>")
					if err != nil {
						return err
					}
					// StringExpression
					var var_48 string = videoFormState.Error
					_, err = templBuffer.WriteString(templ.EscapeString(var_48))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</p>")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</div>")
					if err != nil {
						return err
					}
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<button")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" type=\"submit\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"ui submit button\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Text
				var_49 := `Save`
				_, err = templBuffer.WriteString(var_49)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</button>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</form>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = app(state).Render(templ.WithChildren(ctx, var_42), templBuffer)
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = page(fmt.Sprintf("Edit %v", video.Title), "The creamiest selfhosted tubesite").Render(templ.WithChildren(ctx, var_41), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func DeleteForm(state AppState, videoFormState VideoFormState, video videostore.Video) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_50 := templ.GetChildren(ctx)
		if var_50 == nil {
			var_50 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// TemplElement
		var_51 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			// TemplElement
			var_52 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"upload ui text container\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<form")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" method=\"POST\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"ui form\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" enctype=\"multipart/form-data\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<p>")
				if err != nil {
					return err
				}
				// Text
				var_53 := `Are you sure you want to delete `
				_, err = templBuffer.WriteString(var_53)
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<strong>")
				if err != nil {
					return err
				}
				// StringExpression
				var var_54 string = video.Title
				_, err = templBuffer.WriteString(templ.EscapeString(var_54))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</strong>")
				if err != nil {
					return err
				}
				// Text
				var_55 := `?`
				_, err = templBuffer.WriteString(var_55)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p>")
				if err != nil {
					return err
				}
				// If
				if videoFormState.Error != "" {
					// Element (standard)
					_, err = templBuffer.WriteString("<div")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"ui visible negative message\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<div")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"header\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Text
					var_56 := `Video delete failed`
					_, err = templBuffer.WriteString(var_56)
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</div>")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<p>")
					if err != nil {
						return err
					}
					// StringExpression
					var var_57 string = videoFormState.Error
					_, err = templBuffer.WriteString(templ.EscapeString(var_57))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</p>")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</div>")
					if err != nil {
						return err
					}
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<button")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" type=\"submit\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"ui submit negative button\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Text
				var_58 := `Delete`
				_, err = templBuffer.WriteString(var_58)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</button>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</form>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = app(state).Render(templ.WithChildren(ctx, var_52), templBuffer)
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = page(fmt.Sprintf("Delete %v", video.Title), "The creamiest selfhosted tubesite").Render(templ.WithChildren(ctx, var_51), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

func Watch(state AppState, video videostore.Video) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_59 := templ.GetChildren(ctx)
		if var_59 == nil {
			var_59 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// TemplElement
		var_60 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			// TemplElement
			var_61 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"watch\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui vertical segment\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui center aligned fluid video container\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<video")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" src=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(state.PUG(video.Source)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" controls")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" autoplay")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</video>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui vertical segment\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<span")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" aria-label=\"Video Title\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"header\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// StringExpression
				var var_62 string = video.Title
				_, err = templBuffer.WriteString(templ.EscapeString(var_62))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</span>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<p")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" aria-label=\"Video Description\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"description\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// StringExpression
				var var_63 string = video.Description
				_, err = templBuffer.WriteString(templ.EscapeString(var_63))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui right floated buttons\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<a")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"ui basic inverted icon download button\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" download=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(video.OriginalFileName))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" href=")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				var var_64 templ.SafeURL = templ.SafeURL(state.PUG(video.Source))
				_, err = templBuffer.WriteString(templ.EscapeString(string(var_64)))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<i")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" class=\"download icon\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</i>")
				if err != nil {
					return err
				}
				// Whitespace (normalised)
				_, err = templBuffer.WriteString(` `)
				if err != nil {
					return err
				}
				// Text
				var_65 := `Download`
				_, err = templBuffer.WriteString(var_65)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</a>")
				if err != nil {
					return err
				}
				// If
				if !state.ReadOnly {
					// Element (standard)
					_, err = templBuffer.WriteString("<a")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" cv-confirm=\"#formDelete\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(" class=\"ui basic red icon delete button\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(" href=")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					var var_66 templ.SafeURL = videoDeleteURL(video)
					_, err = templBuffer.WriteString(templ.EscapeString(string(var_66)))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<i")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"trash icon\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</i>")
					if err != nil {
						return err
					}
					// Whitespace (normalised)
					_, err = templBuffer.WriteString(` `)
					if err != nil {
						return err
					}
					// Text
					var_67 := `Delete`
					_, err = templBuffer.WriteString(var_67)
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</a>")
					if err != nil {
						return err
					}
					// Whitespace (normalised)
					_, err = templBuffer.WriteString(` `)
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<form")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" id=\"formDelete\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(" method=\"POST\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(" action=")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/delete/%v", video.ID)))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</form>")
					if err != nil {
						return err
					}
					// Whitespace (normalised)
					_, err = templBuffer.WriteString(` `)
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<a")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"ui basic yellow icon edit button\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(" href=")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					var var_68 templ.SafeURL = videoEditURL(video)
					_, err = templBuffer.WriteString(templ.EscapeString(string(var_68)))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// Element (standard)
					_, err = templBuffer.WriteString("<i")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"edit icon\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</i>")
					if err != nil {
						return err
					}
					// Whitespace (normalised)
					_, err = templBuffer.WriteString(` `)
					if err != nil {
						return err
					}
					// Text
					var_69 := `Edit`
					_, err = templBuffer.WriteString(var_69)
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</a>")
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				// Element (standard)
				_, err = templBuffer.WriteString("<div")
				if err != nil {
					return err
				}
				// Element Attributes
				_, err = templBuffer.WriteString(" aria-label=\"Video Tags\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(" class=\"tags\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(">")
				if err != nil {
					return err
				}
				// For
				for _, tag := range video.Tags {
					// Element (standard)
					_, err = templBuffer.WriteString("<a")
					if err != nil {
						return err
					}
					// Element Attributes
					_, err = templBuffer.WriteString(" class=\"ui label\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(" href=")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					var var_70 templ.SafeURL = tagSearchURL(tag)
					_, err = templBuffer.WriteString(templ.EscapeString(string(var_70)))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("\"")
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString(">")
					if err != nil {
						return err
					}
					// StringExpression
					var var_71 string = tag
					_, err = templBuffer.WriteString(templ.EscapeString(var_71))
					if err != nil {
						return err
					}
					_, err = templBuffer.WriteString("</a>")
					if err != nil {
						return err
					}
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = app(state).Render(templ.WithChildren(ctx, var_61), templBuffer)
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = page(video.Title, video.Description).Render(templ.WithChildren(ctx, var_60), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}
